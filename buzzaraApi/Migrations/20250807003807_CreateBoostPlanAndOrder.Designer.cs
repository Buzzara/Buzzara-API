// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using buzzaraApi.Data;

#nullable disable

namespace buzzaraApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250807003807_CreateBoostPlanAndOrder")]
    partial class CreateBoostPlanAndOrder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("buzzaraApi.Models.Agendamento", b =>
                {
                    b.Property<int>("AgendamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgendamentoID"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("PerfilAcompanhanteID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgendamentoID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("PerfilAcompanhanteID");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("buzzaraApi.Models.BoostOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("FirstTime")
                        .HasColumnType("time");

                    b.Property<string>("InitPoint")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("LastTime")
                        .HasColumnType("time");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<string>("PreferenceId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SandboxInitPoint")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("PlanId");

                    b.HasIndex("ServicoId");

                    b.HasIndex("UserId");

                    b.ToTable("BoostOrders");
                });

            modelBuilder.Entity("buzzaraApi.Models.BoostPlan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"));

                    b.Property<int>("DaysDuration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("Recommended")
                        .HasColumnType("bit");

                    b.Property<int>("UpsPerDay")
                        .HasColumnType("int");

                    b.HasKey("PlanId");

                    b.ToTable("BoostPlans");
                });

            modelBuilder.Entity("buzzaraApi.Models.FotoAcompanhante", b =>
                {
                    b.Property<int>("FotoAcompanhanteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FotoAcompanhanteID"));

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("datetime2");

                    b.Property<int>("PerfilAcompanhanteID")
                        .HasColumnType("int");

                    b.Property<string>("UrlFoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FotoAcompanhanteID");

                    b.HasIndex("PerfilAcompanhanteID");

                    b.ToTable("FotosAcompanhantes");
                });

            modelBuilder.Entity("buzzaraApi.Models.FotoAnuncio", b =>
                {
                    b.Property<int>("FotoAnuncioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FotoAnuncioID"));

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServicoID")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FotoAnuncioID");

                    b.HasIndex("ServicoID");

                    b.ToTable("FotosAnuncios");
                });

            modelBuilder.Entity("buzzaraApi.Models.HorarioAtendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Atende")
                        .HasColumnType("bit");

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("HorarioFim")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("HorarioInicio")
                        .HasColumnType("time");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.Property<bool>("VinteQuatroHoras")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ServicoId");

                    b.ToTable("HorariosAtendimentos");
                });

            modelBuilder.Entity("buzzaraApi.Models.Localizacao", b =>
                {
                    b.Property<int>("LocalizacaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocalizacaoID"));

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("ServicoID")
                        .HasColumnType("int");

                    b.HasKey("LocalizacaoID");

                    b.HasIndex("ServicoID")
                        .IsUnique();

                    b.ToTable("Localizacoes");
                });

            modelBuilder.Entity("buzzaraApi.Models.PagamentoAnuncio", b =>
                {
                    b.Property<int>("PagamentoAnuncioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagamentoAnuncioID"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit");

                    b.Property<string>("QrCodeUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ServicoID")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PagamentoAnuncioID");

                    b.HasIndex("ServicoID");

                    b.ToTable("PagamentosAnuncios");
                });

            modelBuilder.Entity("buzzaraApi.Models.PerfilAcompanhante", b =>
                {
                    b.Property<int>("PerfilAcompanhanteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerfilAcompanhanteID"));

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localizacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tarifa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("PerfilAcompanhanteID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("PerfisAcompanhantes");
                });

            modelBuilder.Entity("buzzaraApi.Models.Servico", b =>
                {
                    b.Property<int>("ServicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServicoID"));

                    b.Property<decimal?>("Altura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disponibilidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("LugarEncontro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerfilAcompanhanteID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Saidas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServicoEspecial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServicoPrestado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServicoID");

                    b.HasIndex("PerfilAcompanhanteID");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("buzzaraApi.Models.ServicoCache", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoCache")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorCache")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ServicoId");

                    b.ToTable("ServicosCaches");
                });

            modelBuilder.Entity("buzzaraApi.Models.SobreUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Atendimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cabelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Corpo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estatura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Etnia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pubis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relacionamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServicoId")
                        .IsUnique();

                    b.ToTable("SobreUsuarios");
                });

            modelBuilder.Entity("buzzaraApi.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstaOnline")
                        .HasColumnType("bit");

                    b.Property<string>("FotoCapaUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FotoPerfilUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimoAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimoIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidationTokenExpiration")
                        .HasColumnType("datetime2");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("buzzaraApi.Models.VideoAcompanhante", b =>
                {
                    b.Property<int>("VideoAcompanhanteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VideoAcompanhanteID"));

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("datetime2");

                    b.Property<int>("PerfilAcompanhanteID")
                        .HasColumnType("int");

                    b.Property<string>("UrlVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VideoAcompanhanteID");

                    b.HasIndex("PerfilAcompanhanteID");

                    b.ToTable("VideosAcompanhantes");
                });

            modelBuilder.Entity("buzzaraApi.Models.VideoAnuncio", b =>
                {
                    b.Property<int>("VideoAnuncioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VideoAnuncioID"));

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServicoID")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VideoAnuncioID");

                    b.HasIndex("ServicoID");

                    b.ToTable("VideosAnuncios");
                });

            modelBuilder.Entity("buzzaraApi.Models.Agendamento", b =>
                {
                    b.HasOne("buzzaraApi.Models.Usuario", "Cliente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("buzzaraApi.Models.PerfilAcompanhante", "PerfilAcompanhante")
                        .WithMany("Agendamentos")
                        .HasForeignKey("PerfilAcompanhanteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PerfilAcompanhante");
                });

            modelBuilder.Entity("buzzaraApi.Models.BoostOrder", b =>
                {
                    b.HasOne("buzzaraApi.Models.BoostPlan", "Plan")
                        .WithMany("Orders")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("buzzaraApi.Models.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("buzzaraApi.Models.Usuario", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("Servico");

                    b.Navigation("User");
                });

            modelBuilder.Entity("buzzaraApi.Models.FotoAcompanhante", b =>
                {
                    b.HasOne("buzzaraApi.Models.PerfilAcompanhante", "PerfilAcompanhante")
                        .WithMany("Fotos")
                        .HasForeignKey("PerfilAcompanhanteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerfilAcompanhante");
                });

            modelBuilder.Entity("buzzaraApi.Models.FotoAnuncio", b =>
                {
                    b.HasOne("buzzaraApi.Models.Servico", "Servico")
                        .WithMany("Fotos")
                        .HasForeignKey("ServicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("buzzaraApi.Models.HorarioAtendimento", b =>
                {
                    b.HasOne("buzzaraApi.Models.Servico", "Servico")
                        .WithMany("HorariosAtendimento")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("buzzaraApi.Models.Localizacao", b =>
                {
                    b.HasOne("buzzaraApi.Models.Servico", "Servico")
                        .WithOne("Localizacao")
                        .HasForeignKey("buzzaraApi.Models.Localizacao", "ServicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("buzzaraApi.Models.PagamentoAnuncio", b =>
                {
                    b.HasOne("buzzaraApi.Models.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("buzzaraApi.Models.PerfilAcompanhante", b =>
                {
                    b.HasOne("buzzaraApi.Models.Usuario", "Usuario")
                        .WithMany("PerfisAcompanhantes")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("buzzaraApi.Models.Servico", b =>
                {
                    b.HasOne("buzzaraApi.Models.PerfilAcompanhante", "PerfilAcompanhante")
                        .WithMany("Servicos")
                        .HasForeignKey("PerfilAcompanhanteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerfilAcompanhante");
                });

            modelBuilder.Entity("buzzaraApi.Models.ServicoCache", b =>
                {
                    b.HasOne("buzzaraApi.Models.Servico", "Servico")
                        .WithMany("Caches")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("buzzaraApi.Models.SobreUsuario", b =>
                {
                    b.HasOne("buzzaraApi.Models.Servico", "Servico")
                        .WithOne("SobreUsuario")
                        .HasForeignKey("buzzaraApi.Models.SobreUsuario", "ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("buzzaraApi.Models.VideoAcompanhante", b =>
                {
                    b.HasOne("buzzaraApi.Models.PerfilAcompanhante", "PerfilAcompanhante")
                        .WithMany("Videos")
                        .HasForeignKey("PerfilAcompanhanteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerfilAcompanhante");
                });

            modelBuilder.Entity("buzzaraApi.Models.VideoAnuncio", b =>
                {
                    b.HasOne("buzzaraApi.Models.Servico", "Servico")
                        .WithMany("Videos")
                        .HasForeignKey("ServicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("buzzaraApi.Models.BoostPlan", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("buzzaraApi.Models.PerfilAcompanhante", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Fotos");

                    b.Navigation("Servicos");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("buzzaraApi.Models.Servico", b =>
                {
                    b.Navigation("Caches");

                    b.Navigation("Fotos");

                    b.Navigation("HorariosAtendimento");

                    b.Navigation("Localizacao");

                    b.Navigation("SobreUsuario");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("buzzaraApi.Models.Usuario", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("PerfisAcompanhantes");
                });
#pragma warning restore 612, 618
        }
    }
}
